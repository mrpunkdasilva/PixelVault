name: 🔍 PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # ===== PR ANALYSIS =====
  pr-analysis:
    name: 🔍 PR Quality Analysis
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📥 Checkout base branch
        run: git fetch origin ${{ github.base_ref }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Code Quality Check
        id: quality-check
        run: |
          # TypeScript check
          echo "🔍 Running TypeScript validation..."
          npx tsc --noEmit
          
          # ESLint check
          echo "🔍 Running ESLint validation..."
          npx eslint src --ext .ts,.tsx --format compact
          
          echo "✅ Code quality checks passed"

      - name: 📊 Bundle Size Impact
        id: bundle-impact
        run: |
          # Build current PR
          echo "🏗️ Building PR version..."
          npm run build
          PR_SIZE=$(du -sb dist/ | cut -f1)
          
          # Build base branch
          echo "🏗️ Building base branch..."
          git checkout origin/${{ github.base_ref }}
          npm ci
          npm run build
          BASE_SIZE=$(du -sb dist/ | cut -f1)
          
          # Calculate difference
          DIFF=$((PR_SIZE - BASE_SIZE))
          DIFF_KB=$((DIFF / 1024))
          DIFF_PERCENT=$(( (DIFF * 100) / BASE_SIZE ))
          
          echo "📊 Bundle size analysis:"
          echo "- Base: $(($BASE_SIZE / 1024)) KB"
          echo "- PR: $(($PR_SIZE / 1024)) KB"
          echo "- Difference: ${DIFF_KB} KB (${DIFF_PERCENT}%)"
          
          # Set outputs
          echo "base-size=$BASE_SIZE" >> $GITHUB_OUTPUT
          echo "pr-size=$PR_SIZE" >> $GITHUB_OUTPUT
          echo "diff-kb=$DIFF_KB" >> $GITHUB_OUTPUT
          echo "diff-percent=$DIFF_PERCENT" >> $GITHUB_OUTPUT

      - name: 📝 Performance Budget Validation
        run: |
          git checkout ${{ github.sha }}
          npm ci
          npm run build
          npm run check:budget
          echo "✅ Performance budget validation passed"

      - name: 📱 PR Comment
        uses: actions/github-script@v7
        with:
          script: |
            const prSize = '${{ steps.bundle-impact.outputs.pr-size }}';
            const baseSize = '${{ steps.bundle-impact.outputs.base-size }}';
            const diffKB = '${{ steps.bundle-impact.outputs.diff-kb }}';
            const diffPercent = '${{ steps.bundle-impact.outputs.diff-percent }}';
            
            const prSizeKB = Math.round(prSize / 1024);
            const baseSizeKB = Math.round(baseSize / 1024);
            
            const emoji = diffKB > 0 ? '📈' : diffKB < 0 ? '📉' : '➡️';
            const impact = Math.abs(diffKB) > 10 ? '⚠️ Significant' : '✅ Minimal';
            
            const comment = `## 🚀 PixelVault PR Analysis

            ### 📊 Bundle Size Impact
            | Metric | Value |
            |--------|-------|
            | Base Size | ${baseSizeKB} KB |
            | PR Size | ${prSizeKB} KB |
            | Difference | ${emoji} ${diffKB} KB (${diffPercent}%) |
            | Impact | ${impact} |

            ### ✅ Quality Checks
            - 🔍 TypeScript validation: Passed
            - 📏 ESLint checks: Passed  
            - 🎯 Performance budget: Passed
            - 📦 Bundle analysis: Complete

            ${Math.abs(diffKB) > 50 ? 
              '⚠️ **Large bundle size change detected!** Please review the changes carefully.' : 
              '✅ Bundle size impact is within acceptable limits.'
            }

            ---
            *This comment is automatically generated by the CI/CD pipeline*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # ===== VISUAL REGRESSION TESTING =====
  visual-regression:
    name: 👁️ Visual Regression Tests
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build

      - name: 🎭 Setup Playwright
        run: |
          npm install -D @playwright/test
          npx playwright install chromium

      - name: 📸 Visual regression tests
        run: |
          # Start preview server
          npm run preview &
          SERVER_PID=$!
          
          sleep 10
          
          # Create basic visual test
          cat > visual-test.js << 'EOF'
          const { test, expect } = require('@playwright/test');
          
          test('homepage visual regression', async ({ page }) => {
            await page.goto('http://localhost:4173');
            await page.waitForLoadState('networkidle');
            await expect(page).toHaveScreenshot('homepage.png');
          });
          
          test('mobile viewport', async ({ page }) => {
            await page.setViewportSize({ width: 375, height: 667 });
            await page.goto('http://localhost:4173');
            await page.waitForLoadState('networkidle');
            await expect(page).toHaveScreenshot('mobile.png');
          });
          EOF
          
          npx playwright test visual-test.js || echo "⚠️ Visual regression tests need baseline images"
          
          # Clean up
          kill $SERVER_PID || true

      - name: 📤 Upload screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: visual-regression-results
          path: test-results/
          retention-days: 7

  # ===== SECURITY AUDIT =====
  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 🔒 npm audit
        run: |
          npm audit --audit-level=moderate
          echo "✅ Security audit completed"

      - name: 🔍 Dependency Check
        run: |
          # Check for known vulnerabilities
          npx audit-ci --moderate
          echo "✅ Dependency security check passed"

  # ===== ACCESSIBILITY TESTING =====
  accessibility:
    name: ♿ Accessibility Tests
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build

      - name: ♿ Accessibility audit
        run: |
          # Install axe-core CLI
          npm install -g @axe-core/cli
          
          # Start preview server
          npm run preview &
          SERVER_PID=$!
          
          sleep 10
          
          # Run accessibility tests
          axe http://localhost:4173 --exit
          
          # Clean up
          kill $SERVER_PID || true
          
          echo "✅ Accessibility audit completed"name: 🔍 PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # ===== PR ANALYSIS =====
  pr-analysis:
    name: 🔍 PR Quality Analysis
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📥 Checkout base branch
        run: git fetch origin ${{ github.base_ref }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Code Quality Check
        id: quality-check
        run: |
          # TypeScript check
          echo "🔍 Running TypeScript validation..."
          npx tsc --noEmit
          
          # ESLint check
          echo "🔍 Running ESLint validation..."
          npx eslint src --ext .ts,.tsx --format compact
          
          echo "✅ Code quality checks passed"

      - name: 📊 Bundle Size Impact
        id: bundle-impact
        run: |
          # Build current PR
          echo "🏗️ Building PR version..."
          npm run build
          PR_SIZE=$(du -sb dist/ | cut -f1)
          
          # Build base branch
          echo "🏗️ Building base branch..."
          git checkout origin/${{ github.base_ref }}
          npm ci
          npm run build
          BASE_SIZE=$(du -sb dist/ | cut -f1)
          
          # Calculate difference
          DIFF=$((PR_SIZE - BASE_SIZE))
          DIFF_KB=$((DIFF / 1024))
          DIFF_PERCENT=$(( (DIFF * 100) / BASE_SIZE ))
          
          echo "📊 Bundle size analysis:"
          echo "- Base: $(($BASE_SIZE / 1024)) KB"
          echo "- PR: $(($PR_SIZE / 1024)) KB"
          echo "- Difference: ${DIFF_KB} KB (${DIFF_PERCENT}%)"
          
          # Set outputs
          echo "base-size=$BASE_SIZE" >> $GITHUB_OUTPUT
          echo "pr-size=$PR_SIZE" >> $GITHUB_OUTPUT
          echo "diff-kb=$DIFF_KB" >> $GITHUB_OUTPUT
          echo "diff-percent=$DIFF_PERCENT" >> $GITHUB_OUTPUT

      - name: 📝 Performance Budget Validation
        run: |
          git checkout ${{ github.sha }}
          npm ci
          npm run build
          npm run check:budget
          echo "✅ Performance budget validation passed"

      - name: 📱 PR Comment
        uses: actions/github-script@v7
        with:
          script: |
            const prSize = '${{ steps.bundle-impact.outputs.pr-size }}';
            const baseSize = '${{ steps.bundle-impact.outputs.base-size }}';
            const diffKB = '${{ steps.bundle-impact.outputs.diff-kb }}';
            const diffPercent = '${{ steps.bundle-impact.outputs.diff-percent }}';
            
            const prSizeKB = Math.round(prSize / 1024);
            const baseSizeKB = Math.round(baseSize / 1024);
            
            const emoji = diffKB > 0 ? '📈' : diffKB < 0 ? '📉' : '➡️';
            const impact = Math.abs(diffKB) > 10 ? '⚠️ Significant' : '✅ Minimal';
            
            const comment = `## 🚀 PixelVault PR Analysis

            ### 📊 Bundle Size Impact
            | Metric | Value |
            |--------|-------|
            | Base Size | ${baseSizeKB} KB |
            | PR Size | ${prSizeKB} KB |
            | Difference | ${emoji} ${diffKB} KB (${diffPercent}%) |
            | Impact | ${impact} |

            ### ✅ Quality Checks
            - 🔍 TypeScript validation: Passed
            - 📏 ESLint checks: Passed  
            - 🎯 Performance budget: Passed
            - 📦 Bundle analysis: Complete

            ${Math.abs(diffKB) > 50 ? 
              '⚠️ **Large bundle size change detected!** Please review the changes carefully.' : 
              '✅ Bundle size impact is within acceptable limits.'
            }

            ---
            *This comment is automatically generated by the CI/CD pipeline*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # ===== VISUAL REGRESSION TESTING =====
  visual-regression:
    name: 👁️ Visual Regression Tests
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build

      - name: 🎭 Setup Playwright
        run: |
          npm install -D @playwright/test
          npx playwright install chromium

      - name: 📸 Visual regression tests
        run: |
          # Start preview server
          npm run preview &
          SERVER_PID=$!
          
          sleep 10
          
          # Create basic visual test
          cat > visual-test.js << 'EOF'
          const { test, expect } = require('@playwright/test');
          
          test('homepage visual regression', async ({ page }) => {
            await page.goto('http://localhost:4173');
            await page.waitForLoadState('networkidle');
            await expect(page).toHaveScreenshot('homepage.png');
          });
          
          test('mobile viewport', async ({ page }) => {
            await page.setViewportSize({ width: 375, height: 667 });
            await page.goto('http://localhost:4173');
            await page.waitForLoadState('networkidle');
            await expect(page).toHaveScreenshot('mobile.png');
          });
          EOF
          
          npx playwright test visual-test.js || echo "⚠️ Visual regression tests need baseline images"
          
          # Clean up
          kill $SERVER_PID || true

      - name: 📤 Upload screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: visual-regression-results
          path: test-results/
          retention-days: 7

  # ===== SECURITY AUDIT =====
  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 🔒 npm audit
        run: |
          npm audit --audit-level=moderate
          echo "✅ Security audit completed"

      - name: 🔍 Dependency Check
        run: |
          # Check for known vulnerabilities
          npx audit-ci --moderate
          echo "✅ Dependency security check passed"

  # ===== ACCESSIBILITY TESTING =====
  accessibility:
    name: ♿ Accessibility Tests
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build

      - name: ♿ Accessibility audit
        run: |
          # Install axe-core CLI
          npm install -g @axe-core/cli
          
          # Start preview server
          npm run preview &
          SERVER_PID=$!
          
          sleep 10
          
          # Run accessibility tests
          axe http://localhost:4173 --exit
          
          # Clean up
          kill $SERVER_PID || true
          
          echo "✅ Accessibility audit completed"